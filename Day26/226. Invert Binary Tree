/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
       if(root==null) return null;
       Queue<TreeNode> q=new LinkedList<>();
       q.offer(root);
       while(!q.isEmpty())
       {
           int l=q.size();
           for(int i=0;i<l;i++)
           {
               TreeNode cur=q.poll();
               TreeNode left=cur.left;
               cur.left=cur.right;
               cur.right=left;
               if(cur.left!=null)  { q.offer(cur.left);}
               if(cur.right!=null)  { q.offer(cur.right);}
           }  
       }   
        return root;
    }
    
    
     public TreeNode invertTree(TreeNode root) {
       if(root==null) return null;
        
        invertTree(root.left);
        invertTree(root.right);
        TreeNode l=root.left;
        root.left=root.right;
        root.right=l;
        return root;
    }
}

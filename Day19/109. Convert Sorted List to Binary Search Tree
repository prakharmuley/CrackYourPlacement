/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode fun(int[] a, int l, int h)
    {
        if(l>h) return null;
        int mid=(l+((h-l)/2));
        TreeNode node=new TreeNode(a[mid]);
        node.left=fun(a,l,mid-1);
        node.right=fun(a,mid+1,h);
        return node;
    }
    public TreeNode sortedListToBST(ListNode head) {
      ListNode cur=head;
      int l=0;
        while(cur!=null)
        {
            cur=cur.next;
            l++;
        }
        int a[]=new int[l];
        cur=head; l=0;
        while(cur!=null)
        {
            a[l++]=cur.val;
            cur=cur.next;
        }
        return fun(a,0,l-1);
    }
}

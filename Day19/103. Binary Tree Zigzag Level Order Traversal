/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
      
        Queue<TreeNode> q=new LinkedList<>();
        List<List<Integer>> res=new ArrayList<>();
          if(root==null) return res;
        q.offer(root);
        boolean f=false;
        while(!q.isEmpty())
        {
            int l=q.size();
            List<Integer> ll=new ArrayList<>(l);
            for(int i=0;i<l;i++)
            {
                TreeNode cur=q.poll();
                if(cur.left!=null) q.offer(cur.left);
                if(cur.right!=null) q.offer(cur.right);
                
                int idx=f?0:l-i-1;
                if(f) ll.add(0,cur.val);
                else ll.add(cur.val);    
            }
            f=!f;
            res.add(ll);
        }
        return res;
    }
}

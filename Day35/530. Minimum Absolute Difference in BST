/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void dfs(TreeNode root,List<Integer> l)
    {
        if(root==null) return;
        dfs(root.left,l);
        l.add(root.val);
        dfs(root.right,l);
        
    }
    public int getMinimumDifference(TreeNode root) {
        int ans=Integer.MAX_VALUE;
        List<Integer> l=new ArrayList<>();
        dfs(root,l);
        for(int i=1;i<l.size();i++)
        {
            ans=Math.min(ans,l.get(i)-l.get(i-1));
        }
        return ans;
    }
}

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode revL(ListNode head)
    {
        if(head==null|head.next==null) return head;
        ListNode prev=null;
        while(head!=null){
        ListNode node=head.next;
         head.next=prev;
            prev=head;
            head=node;
        }
        return prev;
        
    }
    public boolean isPalindrome(ListNode head) {
        if(head==null||head.next==null) return true;
        ListNode slow=head;
        ListNode fast=head;
        while(fast.next!=null&&fast.next.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
        }
       slow.next=revL(slow.next);
           slow=slow.next;
        ListNode temp=head;
        while(slow!=null)
        {
            if(slow.val!=temp.val) return false;
            else
            {
                slow=slow.next;
                temp=temp.next;
            }
        }
        return true;
        
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null||root==p||root==q)
        {
            return root;
        }
        TreeNode l=lowestCommonAncestor(root.left,p,q);
        TreeNode r=lowestCommonAncestor(root.right,p,q);
        if(l==null) return r;
        else if(r==null) return l;
        return root;
            
    }
}


class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(root==null) return null;
        TreeNode cur=root;
        if(cur.val<p.val&&cur.val<q.val) return lowestCommonAncestor(root.right,p,q);
        else if(cur.val>p.val&&cur.val>q.val) return lowestCommonAncestor(root.left,p,q);
        return root;
            
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int dfs(TreeNode root, int[] d)
    {
        if(root==null) return 0;
        int l=Math.max(0,dfs(root.left,d));
       
        int r=Math.max(0,dfs(root.right,d));
        
         d[0]=Math.max(d[0],l+r+(root.val));
      
       
        return Math.max(l,r)+(root.val);
    }
    public int maxPathSum(TreeNode root) {
        if(root==null) return root.val;
    
        int d[]=new int[1];
        d[0]=Integer.MIN_VALUE;
        dfs(root,d);
        return d[0];
    }
}

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
         Map<Integer,Integer> mp=new HashMap<>();
        for(int x: nums) mp.put(x,mp.getOrDefault(x,0)+1);
        PriorityQueue<Map.Entry<Integer,Integer>> pq=new PriorityQueue<>((a,b)->a.getValue()-      b.getValue());  
        int ans[]=new int[k];
        int j=0;
        for(Map.Entry<Integer,Integer> e: mp.entrySet())
        {
          pq.add(e);
          if(pq.size()>k) pq.poll();
        }
        while(!pq.isEmpty())
        {
            Map.Entry<Integer,Integer> e=pq.poll();
            ans[k-j++-1]=(int)e.getKey();      
        }
        return ans;
    }
}

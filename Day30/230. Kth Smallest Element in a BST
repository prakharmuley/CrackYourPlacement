/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void dfs(TreeNode root, int k, int[] c, int[] ans)
    {
        if(root==null)
        {
            return ;
        }
        dfs(root.left,k,c,ans);
        c[0]++;
        if(k==c[0])
        {
            ans[0]=root.val;   
        }
        dfs(root.right,k,c,ans);
    }
    
    public int kthSmallest(TreeNode root, int k) {
        int ans[]=new int[1];
        int c[]=new int[1];
        ans[0]=root.val;
        dfs(root,k,c,ans);
        return ans[0];
        
    }
}

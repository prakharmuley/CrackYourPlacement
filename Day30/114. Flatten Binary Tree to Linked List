/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   public void rev_post(TreeNode root, TreeNode[] prev)
   {
       if(root==null) return;
       rev_post(root.right,prev);
       rev_post(root.left,prev);
       root.right=prev[0];
       root.left=null;
       prev[0]=root;
   }
    public void flatten(TreeNode root) {
        TreeNode prev[]=new TreeNode[1];
        rev_post(root,prev);
       
    }
}



class Solution {
  
    public void flatten(TreeNode root) {
        
       TreeNode cur=root;
       TreeNode prev=null;
       while(cur!=null)
       {
           if(cur.left!=null)
           {
               prev=cur.left;
               while(prev.right!=null) 
                   prev=prev.right;
               
               prev.right=cur.right;
               cur.right=cur.left;
               cur.left=null;
           }
           cur=cur.right;
       }
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
     
    public List<TreeNode> fun(int start, int end)
    {
        List<TreeNode> l=new ArrayList<>();
        if(start>end) 
        {
            l.add(null);
            return l;
        }
        
        for(int i=start;i<=end;i++)
        {  
           List<TreeNode> leftt=fun(start,i-1);
           List<TreeNode> rightt=fun(i+1,end);
            for(TreeNode lft: leftt)
            {
                for(TreeNode rht: rightt)
                {
                    TreeNode n=new TreeNode(i);
                    n.left=lft;
                    n.right=rht;
                    l.add(n);
                }
            } 
        }
        return l;
    }
    public List<TreeNode> generateTrees(int n) {
       
        return fun(1,n);
    }
    
}
